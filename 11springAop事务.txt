1 , 关于事务的概念是一个独立的内容
	跟所使用的框架没有关系
	
2 , 关于事务的传播行为概念
	此概念听起来很高大上 , 其实只有在一个事务中 ,去嵌套调用了另一个事务时 , 才有作用
	
3 , 这里所说的都是spring管理事务 , 具体的整合了spring后 , 由谁管理事务还需要另看

4 , 编码式管理事务
	1) 将核心的事务管理器配置到spring容器中 , 并在数据源注入到事务管理器中
		这个事务管理器应该配置了打开事务 \ 提交回滚事务 这些操作不需要我们手动去操作
		并且spring管理事务肯定用到了aop思想 , 用到了动态代理技术
		
		应该说来 , 这是事务管理器就是增强代码
		
	2) 配置transactionTemplate事务模板 , 并且需要注入核心事务管理器
		这个模板应该是针对不同的操作数据库的方式配置的
		应该是一个基于普通jdbc事务操作的
		之后应该会有针对hibernateTemplate事务模板
		
	3) 配置serviceBean , 并且把事务模板注入到service中
		
	总结 , 事务管理 , 就是使用spring提供的增强代码
	
5 , xml配置spring事务
	1) 导包
		需要springtx包
	2) 需要用到
		<tx标签
			将核心的事务管理器配置到spring容器中 , 并在数据源注入到事务管理器中
			这个事务管理器应该配置了打开事务 \ 提交回滚事务 这些操作不需要我们手动去操作
			并且spring管理事务肯定用到了aop思想 , 用到了动态代理技术
		<aop标签
	
	3) <tx:advice 这个就是配置增强代码 
		以方法为单位 , 配置方法应该使用什么样的事务 , 因为并不是所有的方法都使用一种事务
		所以总的来说 , 这个就是配置事务的增强代码的 , 只不过增强的代码不需要我们自己写
	
	4) <aop:cofing 标签配置织入
		<pintcut 配置切点 , 有哪些切点需要事务的管理
		<aop:advice 配置增强 , 将上面的增强代码引入即可
		
6 , 使用注解配置spring事务
	1) <tx: annotation-driven>
		在applicationContext.xml 需要打开注解配置事务的开关
		使用注解配置bean需要打开开关
		使用注解配置springaop需要打开开关
		使用注解配置spring事务需要打开开关
		
	2) 在需要使用事务的类上使用
		@transaction标签
		@Transactional(isolation=Isolation.REPEATABLE_READ,propagation=Propagation.REQUIRED,readOnly=true)
		
		如果是查找方法 , 那么在具体的方法上使用@transaction标签即可 , 会将类名上配置的事务属性覆盖
		那么把readOnly = true即可
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		